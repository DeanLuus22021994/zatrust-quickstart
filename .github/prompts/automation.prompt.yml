# Automation Orchestration Prompt (Workflow Failures)
# Purpose: Comprehensive remediation guidance for CI/CD workflow failures
# SRP: Standardized automation failure triage, diagnosis, and resolution

version: 2
kind: automation
scope: workflow-failures

# Enhanced monitoring for modernized workflows
workflows:
  monitored:
    - name: CI
      label: ci-failure
      priority: high
      remediation:
        scripts:
          - npm run quality:all
          - npm run analyze
        validation:
          - npm run doctor
          - npm run lint
          - npm run typecheck
          - npm run test:e2e
        notes:
          - "Matrix build failure: Focus on first failing Node version to avoid cascade errors"
          - "E2E test failures: Check Playwright browser installation and test artifacts"
          - "Bundle analysis: Review bundle-analysis artifacts for size regressions"
          - "Security audit: Address high+ severity vulnerabilities immediately"
          
    - name: ShellCheck Analysis
      label: shellcheck-failure
      priority: medium
      remediation:
        scripts:
          - bash -n .devcontainer/scripts/*.sh
          - shellcheck --version
          - shellcheck --format=gcc --severity=error .devcontainer/scripts/*.sh
        validation:
          - find . -name "*.sh" -exec bash -n {} \;
        notes:
          - "Error priority: Fix SC2xxx error codes before warnings"
          - "Common fixes: Add quotes, use [[ ]], set -euo pipefail"
          - "Download SARIF artifact for precise issue locations"
          
    - name: CodeQL Security Analysis
      label: codeql-failure
      priority: critical
      remediation:
        scripts:
          - npm ci --no-audit --no-fund
          - npm run build
        validation:
          - npm run typecheck
          - npm run lint
        notes:
          - "Security findings: Review Security tab for SARIF results"
          - "High priority: Fix any data flow or injection vulnerabilities"
          - "False positives: Use CodeQL suppression comments sparingly"
          - "SARIF upload: Ensure results are properly categorized"

    - name: Auto-merge Dependencies
      label: automerge-failure
      priority: medium
      remediation:
        scripts:
          - npm run quality:all
        validation:
          - npm audit --audit-level=high
          - npm outdated
        notes:
          - "Large PR check: Review if >10 files changed requires manual review"
          - "Security patches: Ensure vulnerability fixes are properly tested"
          - "Major updates: Verify breaking changes don't affect functionality"

# Enhanced issue management
issues:
  create:
    reuseExisting: true
    aggregateSimilar: true
    maxOpenIssues: 10
  template:
    title: "{WORKFLOW} Failure - {DATE}"
    labels: ["automation", "{LABEL}", "priority-{PRIORITY}"]
    body: |
      ## üö® Automation Failure Report
      
      **Workflow:** {WORKFLOW}  
      **Branch:** {REF}  
      **Run URL:** {RUN_URL}  
      **Priority:** {PRIORITY}  
      **Timestamp:** {TIMESTAMP}
      
      ## üîç Investigation Steps
      1. **Download artifacts** from the failed workflow run
      2. **Review workflow logs** for the first point of failure
      3. **Reproduce locally** using the remediation scripts below
      4. **Identify root cause** (dependency issue, code change, environment)
      
      ## üõ†Ô∏è Remediation Scripts
      ```bash
      {REMEDIATION_SCRIPTS}
      ```
      
      ## ‚úÖ Validation Checklist
      ```bash
      {VALIDATION_SCRIPTS}
      ```
      
      ## üìã Definition of Done
      - [ ] All CI workflows pass (green status)
      - [ ] No new lint/type errors introduced
      - [ ] E2E test suite completes successfully
      - [ ] Security posture maintained (no new high vulnerabilities)
      - [ ] Bundle size within acceptable limits
      - [ ] All artifacts upload successfully
      
      ## üìö Reference Documentation
      - [Copilot Instructions](.github/copilot-instructions.md)
      - [Automation Prompts](.github/prompts/)
      - [Package.json Scripts](package.json)
      - [Workflow Files](.github/workflows/)
      
      ## üîó Related Links
      - Security findings: [Security Tab]({SECURITY_URL})
      - Dependency dashboard: [Renovate Dashboard]({RENOVATE_URL})
      - Bundle analysis: [Workflow Artifacts]({ARTIFACTS_URL})

# Enhanced Copilot configuration
copilot:
  assign:
    automatic: true
    conditions:
      - workflow_failure
      - security_alert
      - dependency_conflict
    users:
      - "github-actions[bot]"
      - "renovate[bot]"
  
  pr:
    conventionalCommits: true
    autolink: true
    template: |
      ## ü§ñ Auto-Generated Fix
      
      **Issue:** #{ISSUE_NUMBER}  
      **Workflow:** {WORKFLOW}  
      **Root Cause:** {ROOT_CAUSE}
      
      ### üìù Summary
      {SUMMARY}
      
      ### üîß Changes Made
      {CHANGES}
      
      ### ‚úÖ Validation Results
      - [x] Lint check passed
      - [x] Type check passed  
      - [x] E2E tests passed
      - [x] Build successful
      - [x] Security scan clean
      
      ### üìä Impact Assessment
      - **Performance:** {PERFORMANCE_IMPACT}
      - **Security:** {SECURITY_IMPACT}  
      - **Dependencies:** {DEPENDENCY_IMPACT}
      
      ### üß™ Testing Notes
      {TESTING_NOTES}
      
      ---
      *Generated by GitHub Copilot automation*

# Enhanced policy enforcement
policy:
  coding:
    strictTypes: true
    serverComponentsDefault: true
    sanitizeRedirects: true
    noGlobalState: true
    conventionalCommits: true
    
  dependencies:
    autoMergeMinorPatch: true
    reviewMajor: true
    securityUpdatesImmediate: true
    stabilityDays: 1
    
  security:
    requireScanPassing: true
    blockHighVulnerabilities: true
    sarfUploadRequired: true
    
  quality:
    requireLintPassing: true
    requireTypeCheck: true
    requireE2EPassing: true
    maxBundleSize: "500KB"

# Advanced security configuration
security:
  scanning:
    - codeql
    - npm-audit
    - shellcheck
    - sarif-upload
  vulnerabilities:
    autofix: true
    notifications: true
    severity: "high"
  secrets:
    prevention: true
    scanning: true
    
# Performance monitoring
performance:
  monitoring:
    bundleSize: true
    buildTime: true
    testDuration: true
    
  thresholds:
    bundleSizeIncrease: "10%"
    buildTimeIncrease: "20%"
    testTimeoutDefault: "45s"

# Notification configuration
notifications:
  channels:
    - github-issues
    - workflow-summary
    - security-alerts
    
  conditions:
    critical: ["security-findings", "build-failure"]
    warning: ["test-flaky", "bundle-size-increase"]
    info: ["dependency-updates", "successful-deployment"]
