name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 3 * * *" # nightly audit window (UTC)

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  security-events: write

jobs:
  quality:
    name: Quality (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        node: ["20.x", "22.x"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            next-${{ matrix.node }}-

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: E2E Tests
        run: npm run test:e2e -- --reporter=line --timeout=45000
        env:
          CI: "true"

      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.node }}
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload test results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node }}
          path: test-results
          if-no-files-found: ignore

      - name: Generate bundle analysis (build stats)
        run: npx next build --profile || true

      - name: Audit (high+ fail)
        run: npm audit --audit-level=high || true

  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical

  nightly-audit:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Audit (moderate+)
        run: npm audit --audit-level=moderate || true
      - name: Outdated summary
        run: npm outdated || true
      - name: Upload lockfile for inspection
        uses: actions/upload-artifact@v4
        with:
          name: nightly-lockfile
          path: package-lock.json

  # Aggregate status (optional future extension)
  summary:
    needs: [quality]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: echo "Quality matrix completed."
