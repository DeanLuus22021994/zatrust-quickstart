services:
  dev:
    image: mcr.microsoft.com/devcontainers/javascript-node:20
    volumes:
      - .:/workspaces/zatrust-quickstart:cached
      # Using the project's bind mount for node_modules to avoid permission issues with a root-owned named volume.
      # (Previously a named volume caused EACCES during npm install for user "node").
    command: sleep infinity
    # Host port bindings removed. Dev Containers will forward container ports dynamically
    # to an available host port, avoiding collisions with already used host ports.
    # For standalone docker compose (outside VS Code Dev Containers), you can uncomment:
    # ports:
    #   - "${WEB_PORT:-3000}:3000"          # Map container port 3000 to chosen host port
    #   - "${PWDEBUG_PORT:-9323}:9323"      # Playwright inspector / debug
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    working_dir: /workspaces/zatrust-quickstart
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "require(''http'').get(''http://localhost:3000'',r=>{process.exit(r.statusCode===200?0:1);}).on(''error'',()=>process.exit(1));"',
        ]
      interval: 30s
      timeout: 5s
      retries: 5
    # NOTE: If you really need to isolate Linux-built node_modules from the host, reintroduce a named volume:
    #   volumes:
    #     - node_modules:/workspaces/zatrust-quickstart/node_modules
    # and ensure a root-owned chown step runs before npm install.
  # Removed named volume "node_modules" to simplify permissions.
  runner:
    image: mcr.microsoft.com/devcontainers/javascript-node:20
    profiles: ["runner"]
    working_dir: /workspaces/zatrust-quickstart
    volumes:
      - .:/workspaces/zatrust-quickstart:cached
    environment:
      - GITHUB_REPOSITORY=DeanLuus22021994/zatrust-quickstart
      - GH_RUNNER_LABELS=self-hosted,compose,linux,x64
      - ENABLE_GH_RUNNER=true
    entrypoint: ["bash", "-lc", "bash .github/scripts/start-runner.sh"]
    restart: unless-stopped
